(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{343:function(s,t,a){"use strict";a.r(t);var n=a(4),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"_6-数据类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-数据类型"}},[s._v("#")]),s._v(" 6.数据类型")]),s._v(" "),t("blockquote",[t("p",[s._v("作者："),t("a",{attrs:{href:"https://wangdoc.com/",target:"_blank",rel:"noopener noreferrer"}},[s._v("来自网道项目"),t("OutboundLink")],1)]),s._v(" "),t("p",[s._v("本站地址："),t("a",{attrs:{href:"http://springsongs.cn",target:"_blank",rel:"noopener noreferrer"}},[s._v("http://springsongs.cn"),t("OutboundLink")],1),s._v("\nC 语言的每一种数据，都是有类型（type）的，编译器必须知道数据的类型，才能操作数据。所谓“类型”，就是相似的数据所拥有的共同特征，那么一旦知道某个值的数据类型，就能知道该值的特征和操作方式。")])]),s._v(" "),t("p",[s._v("基本数据类型有三种：字符（char）、整数（int）和浮点数（float）。复杂的类型都是基于它们构建的。")]),s._v(" "),t("h2",{attrs:{id:"字符类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#字符类型"}},[s._v("#")]),s._v(" 字符类型")]),s._v(" "),t("p",[s._v("字符类型指的是单个字符，类型声明使用"),t("code",[s._v("char")]),s._v("关键字。")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" c "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token char"}},[s._v("'B'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("上面示例声明了变量"),t("code",[s._v("c")]),s._v("是字符类型，并将其赋值为字母"),t("code",[s._v("B")]),s._v("。")]),s._v(" "),t("p",[s._v("C 语言规定，字符常量必须放在单引号里面。")]),s._v(" "),t("p",[s._v("在计算机内部，字符类型使用一个字节（8位）存储。C 语言将其当作整数处理，所以字符类型就是宽度为一个字节的整数。每个字符对应一个整数（由 ASCII 码确定），比如"),t("code",[s._v("B")]),s._v("对应整数"),t("code",[s._v("66")]),s._v("。")]),s._v(" "),t("p",[s._v("字符类型在不同计算机的默认范围是不一样的。一些系统默认为"),t("code",[s._v("-128")]),s._v("到"),t("code",[s._v("127")]),s._v("，另一些系统默认为"),t("code",[s._v("0")]),s._v("到"),t("code",[s._v("255")]),s._v("。这两种范围正好都能覆盖"),t("code",[s._v("0")]),s._v("到"),t("code",[s._v("127")]),s._v("的 ASCII 字符范围。")]),s._v(" "),t("p",[s._v("只要在字符类型的范围之内，整数与字符是可以互换的，都可以赋值给字符类型的变量。")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" c "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("66")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 等同于")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" c "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token char"}},[s._v("'B'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("上面示例中，变量"),t("code",[s._v("c")]),s._v("是字符类型，赋给它的值是整数66。这跟赋值为字符"),t("code",[s._v("B")]),s._v("的效果是一样的。")]),s._v(" "),t("p",[s._v("两个字符类型的变量可以进行数学运算。")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token char"}},[s._v("'B'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 等同于 char a = 66;")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" b "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token char"}},[s._v("'C'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 等同于 char b = 67;")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%d\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 输出 133")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("上面示例中，字符类型变量"),t("code",[s._v("a")]),s._v("和"),t("code",[s._v("b")]),s._v("相加，视同两个整数相加。占位符"),t("code",[s._v("%d")]),s._v("表示输出十进制整数，因此输出结果为133。")]),s._v(" "),t("p",[s._v("单引号本身也是一个字符，如果要表示这个字符常量，必须使用反斜杠转义。")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" t "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token char"}},[s._v("'\\''")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("上面示例中，变量"),t("code",[s._v("t")]),s._v("为单引号字符，由于字符常量必须放在单引号里面，所以内部的单引号要使用反斜杠转义。")]),s._v(" "),t("p",[s._v("这种转义的写法，主要用来表示 ASCII 码定义的一些无法打印的控制字符，它们也属于字符类型的值。")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("\\a")]),s._v("：警报，这会使得终端发出警报声或出现闪烁，或者两者同时发生。")]),s._v(" "),t("li",[t("code",[s._v("\\b")]),s._v("：退格键，光标回退一个字符，但不删除字符。")]),s._v(" "),t("li",[t("code",[s._v("\\f")]),s._v("：换页符，光标移到下一页。在现代系统上，这已经反映不出来了，行为改成类似于"),t("code",[s._v("\\v")]),s._v("。")]),s._v(" "),t("li",[t("code",[s._v("\\n")]),s._v("：换行符。")]),s._v(" "),t("li",[t("code",[s._v("\\r")]),s._v("：回车符，光标移到同一行的开头。")]),s._v(" "),t("li",[t("code",[s._v("\\t")]),s._v("：制表符，光标移到下一个水平制表位，通常是下一个8的倍数。")]),s._v(" "),t("li",[t("code",[s._v("\\v")]),s._v("：垂直分隔符，光标移到下一个垂直制表位，通常是下一行的同一列。")]),s._v(" "),t("li",[t("code",[s._v("\\0")]),s._v("：null 字符，代表没有内容。注意，这个值不等于数字0。")])]),s._v(" "),t("p",[s._v("转义写法还能使用八进制和十六进制表示一个字符。")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("\\nn")]),s._v("：字符的八进制写法，"),t("code",[s._v("nn")]),s._v("为八进制值。")]),s._v(" "),t("li",[t("code",[s._v("\\xnn")]),s._v("：字符的十六进制写法，"),t("code",[s._v("nn")]),s._v("为十六进制值。")])]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" x "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token char"}},[s._v("'B'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" x "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("66")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" x "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token char"}},[s._v("'\\102'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 八进制")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" x "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token char"}},[s._v("'\\x42'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 十六进制")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("上面示例的四种写法都是等价的。")]),s._v(" "),t("h2",{attrs:{id:"整数类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#整数类型"}},[s._v("#")]),s._v(" 整数类型")]),s._v(" "),t("h3",{attrs:{id:"简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[s._v("#")]),s._v(" 简介")]),s._v(" "),t("p",[s._v("整数类型用来表示较大的整数，类型声明使用"),t("code",[s._v("int")]),s._v("关键字。")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("上面示例声明了一个整数变量"),t("code",[s._v("a")]),s._v("。")]),s._v(" "),t("p",[s._v("不同计算机的"),t("code",[s._v("int")]),s._v("类型的大小是不一样的。比较常见的是使用4个字节（32位）存储一个"),t("code",[s._v("int")]),s._v("类型的值，但是2个字节（16位）或8个字节（64位）也有可能使用。它们可以表示的整数范围如下。")]),s._v(" "),t("ul",[t("li",[s._v("16位：-32,768 到 32,767。")]),s._v(" "),t("li",[s._v("32位：-2,147,483,648 到 2,147,483,647。")]),s._v(" "),t("li",[s._v("64位：-9,223,372,036,854,775,808 到 9,223,372,036,854,775,807。")])]),s._v(" "),t("h3",{attrs:{id:"signed-unsigned"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#signed-unsigned"}},[s._v("#")]),s._v(" signed，unsigned")]),s._v(" "),t("p",[s._v("C 语言使用"),t("code",[s._v("signed")]),s._v("关键字，表示一个类型带有正负号，包含负值；使用"),t("code",[s._v("unsigned")]),s._v("关键字，表示该类型不带有正负号，只能表示零和正整数。")]),s._v(" "),t("p",[s._v("对于"),t("code",[s._v("int")]),s._v("类型，默认是带有正负号的，也就是说"),t("code",[s._v("int")]),s._v("等同于"),t("code",[s._v("signed int")]),s._v("。由于这是默认情况，关键字"),t("code",[s._v("signed")]),s._v("一般都省略不写，但是写了也不算错。")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("signed")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 等同于")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[t("code",[s._v("int")]),s._v("类型也可以不带正负号，只表示非负整数。这时就必须使用关键字"),t("code",[s._v("unsigned")]),s._v("声明变量。")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("整数变量声明为"),t("code",[s._v("unsigned")]),s._v("的好处是，同样长度的内存能够表示的最大整数值，增大了一倍。比如，16位的"),t("code",[s._v("signed int")]),s._v("最大值为32,767，而"),t("code",[s._v("unsigned int")]),s._v("的最大值增大到了65,535。")]),s._v(" "),t("p",[t("code",[s._v("unsigned int")]),s._v("里面的"),t("code",[s._v("int")]),s._v("可以省略，所以上面的变量声明也可以写成下面这样。")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("字符类型"),t("code",[s._v("char")]),s._v("也可以设置"),t("code",[s._v("signed")]),s._v("和"),t("code",[s._v("unsigned")]),s._v("。")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("signed")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 范围为 -128 到 127")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 范围为 0 到 255")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("注意，C 语言规定"),t("code",[s._v("char")]),s._v("类型默认是否带有正负号，由当前系统决定。这就是说，"),t("code",[s._v("char")]),s._v("不等同于"),t("code",[s._v("signed char")]),s._v("，它有可能是"),t("code",[s._v("signed char")]),s._v("，也有可能是"),t("code",[s._v("unsigned char")]),s._v("。这一点与"),t("code",[s._v("int")]),s._v("不同，"),t("code",[s._v("int")]),s._v("就是等同于"),t("code",[s._v("signed int")]),s._v("。")]),s._v(" "),t("h3",{attrs:{id:"整数的子类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#整数的子类型"}},[s._v("#")]),s._v(" 整数的子类型")]),s._v(" "),t("p",[s._v("如果"),t("code",[s._v("int")]),s._v("类型使用4个或8个字节表示一个整数，对于小整数，这样做很浪费空间。另一方面，某些场合需要更大的整数，8个字节还不够。为了解决这些问题，C 语言在"),t("code",[s._v("int")]),s._v("类型之外，又提供了三个整数的子类型。这样有利于更精细地限定整数变量的范围，也有利于更好地表达代码的意图。")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("short int")]),s._v("（简写为"),t("code",[s._v("short")]),s._v("）：占用空间不多于"),t("code",[s._v("int")]),s._v("，一般占用2个字节（整数范围为-32768～32767)。")]),s._v(" "),t("li",[t("code",[s._v("long int")]),s._v("（简写为"),t("code",[s._v("long")]),s._v("）：占用空间不少于"),t("code",[s._v("int")]),s._v("，至少为4个字节。")]),s._v(" "),t("li",[t("code",[s._v("long long int")]),s._v("（简写为"),t("code",[s._v("long long")]),s._v("）：占用空间多于"),t("code",[s._v("long")]),s._v("，至少为8个字节。")])]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("short")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("上面代码分别声明了三种整数子类型的变量。")]),s._v(" "),t("p",[s._v("默认情况下，"),t("code",[s._v("short")]),s._v("、"),t("code",[s._v("long")]),s._v("、"),t("code",[s._v("long long")]),s._v("都是带符号的（signed），即"),t("code",[s._v("signed")]),s._v("关键字省略了。它们也可以声明为不带符号（unsigned），使得能够表示的最大值扩大一倍。")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("short")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("C 语言允许省略"),t("code",[s._v("int")]),s._v("，所以变量声明语句也可以写成下面这样。")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("short")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("short")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("p",[s._v("不同的计算机，数据类型的字节长度是不一样的。确实需要32位整数时，应使用"),t("code",[s._v("long")]),s._v("类型而不是"),t("code",[s._v("int")]),s._v("类型，可以确保不少于4个字节；确实需要64位的整数时，应该使用"),t("code",[s._v("long long")]),s._v("类型，可以确保不少于8个字节。另一方面，为了节省空间，只需要16位整数时，应使用"),t("code",[s._v("short")]),s._v("类型；需要8位整数时，应该使用"),t("code",[s._v("char")]),s._v("类型。")]),s._v(" "),t("h3",{attrs:{id:"整数类型的极限值"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#整数类型的极限值"}},[s._v("#")]),s._v(" 整数类型的极限值")]),s._v(" "),t("p",[s._v("有时候需要查看，当前系统不同整数类型的最大值和最小值，C 语言的头文件"),t("code",[s._v("limits.h")]),s._v("提供了相应的常量，比如"),t("code",[s._v("SCHAR_MIN")]),s._v("代表 signed char 类型的最小值"),t("code",[s._v("-128")]),s._v("，"),t("code",[s._v("SCHAR_MAX")]),s._v("代表 signed char 类型的最大值"),t("code",[s._v("127")]),s._v("。")]),s._v(" "),t("p",[s._v("为了代码的可移植性，需要知道某种整数类型的极限值时，应该尽量使用这些常量。")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("SCHAR_MIN")]),s._v("，"),t("code",[s._v("SCHAR_MAX")]),s._v("：signed char 的最小值和最大值。")]),s._v(" "),t("li",[t("code",[s._v("SHRT_MIN")]),s._v("，"),t("code",[s._v("SHRT_MAX")]),s._v("：short 的最小值和最大值。")]),s._v(" "),t("li",[t("code",[s._v("INT_MIN")]),s._v("，"),t("code",[s._v("INT_MAX")]),s._v("：int 的最小值和最大值。")]),s._v(" "),t("li",[t("code",[s._v("LONG_MIN")]),s._v("，"),t("code",[s._v("LONG_MAX")]),s._v("：long 的最小值和最大值。")]),s._v(" "),t("li",[t("code",[s._v("LLONG_MIN")]),s._v("，"),t("code",[s._v("LLONG_MAX")]),s._v("：long long 的最小值和最大值。")]),s._v(" "),t("li",[t("code",[s._v("UCHAR_MAX")]),s._v("：unsigned char 的最大值。")]),s._v(" "),t("li",[t("code",[s._v("USHRT_MAX")]),s._v("：unsigned short 的最大值。")]),s._v(" "),t("li",[t("code",[s._v("UINT_MAX")]),s._v("：unsigned int 的最大值。")]),s._v(" "),t("li",[t("code",[s._v("ULONG_MAX")]),s._v("：unsigned long 的最大值。")]),s._v(" "),t("li",[t("code",[s._v("ULLONG_MAX")]),s._v("：unsigned long long 的最大值。")])]),s._v(" "),t("h3",{attrs:{id:"整数的进制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#整数的进制"}},[s._v("#")]),s._v(" 整数的进制")]),s._v(" "),t("p",[s._v("C 语言的整数默认都是十进制数，如果要表示八进制数和十六进制数，必须使用专门的表示法。")]),s._v(" "),t("p",[s._v("八进制使用"),t("code",[s._v("0")]),s._v("作为前缀，比如"),t("code",[s._v("017")]),s._v("、"),t("code",[s._v("0377")]),s._v("。")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("012")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 八进制，相当于十进制的10")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("十六进制使用"),t("code",[s._v("0x")]),s._v("或"),t("code",[s._v("0X")]),s._v("作为前缀，比如"),t("code",[s._v("0xf")]),s._v("、"),t("code",[s._v("0X10")]),s._v("。")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x1A2B")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 十六进制，相当于十进制的6699")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("有些编译器使用"),t("code",[s._v("0b")]),s._v("前缀，表示二进制数，但不是标准。")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" x "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("b101010"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("注意，不同的进制只是整数的书写方法，不会对整数的实际存储方式产生影响。所有整数都是二进制形式存储，跟书写方式无关。不同进制可以混合使用，比如"),t("code",[s._v("10 + 015 + 0x20")]),s._v("是一个合法的表达式。")]),s._v(" "),t("p",[t("code",[s._v("printf()")]),s._v("的进制相关占位符如下。")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("%d")]),s._v("：十进制整数。")]),s._v(" "),t("li",[t("code",[s._v("%o")]),s._v("：八进制整数。")]),s._v(" "),t("li",[t("code",[s._v("%x")]),s._v("：十六进制整数。")]),s._v(" "),t("li",[t("code",[s._v("%#o")]),s._v("：显示前缀"),t("code",[s._v("0")]),s._v("的八进制整数。")]),s._v(" "),t("li",[t("code",[s._v("%#x")]),s._v("：显示前缀"),t("code",[s._v("0x")]),s._v("的十六进制整数。")]),s._v(" "),t("li",[t("code",[s._v("%#X")]),s._v("：显示前缀"),t("code",[s._v("0X")]),s._v("的十六进制整数。")])]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" x "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"dec = %d\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" x"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 100")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"octal = %o\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" x"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 144")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hex = %x\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" x"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 64")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"octal = %#o\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" x"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 0144")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hex = %#x\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" x"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 0x64")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hex = %#X\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" x"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 0X64")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("h2",{attrs:{id:"浮点数类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#浮点数类型"}},[s._v("#")]),s._v(" 浮点数类型")]),s._v(" "),t("p",[s._v("任何有小数点的数值，都会被编译器解释为浮点数。所谓“浮点数”就是使用 m * b"),t("sup",[s._v("e")]),s._v(" 的形式，存储一个数值，"),t("code",[s._v("m")]),s._v("是小数部分，"),t("code",[s._v("b")]),s._v("是基数（通常是"),t("code",[s._v("2")]),s._v("），"),t("code",[s._v("e")]),s._v("是指数部分。这种形式是精度和数值范围的一种结合，可以表示非常大或者非常小的数。")]),s._v(" "),t("p",[s._v("浮点数的类型声明使用"),t("code",[s._v("float")]),s._v("关键字，可以用来声明浮点数变量。")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("float")]),s._v(" c "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("上面示例中，变量"),t("code",[s._v("c")]),s._v("的就是浮点数类型。")]),s._v(" "),t("p",[t("code",[s._v("float")]),s._v("类型占用4个字节（32位），其中8位存放指数的值和符号，剩下24位存放小数的值和符号。"),t("code",[s._v("float")]),s._v("类型至少能够提供（十进制的）6位有效数字，指数部分的范围为（十进制的）"),t("code",[s._v("-37")]),s._v("到"),t("code",[s._v("37")]),s._v("，即数值范围为10"),t("sup",[s._v("-37")]),s._v("到10"),t("sup",[s._v("37")]),s._v("。")]),s._v(" "),t("p",[s._v("有时候，32位浮点数提供的精度或者数值范围还不够，C 语言又提供了另外两种更大的浮点数类型。")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("double")]),s._v("：占用8个字节（64位），至少提供13位有效数字。")]),s._v(" "),t("li",[t("code",[s._v("long double")]),s._v("：通常占用16个字节。")])]),s._v(" "),t("p",[s._v("注意，由于存在精度限制，浮点数只是一个近似值，它的计算是不精确的，比如 C 语言里面"),t("code",[s._v("0.1 + 0.2")]),s._v("并不等于"),t("code",[s._v("0.3")]),s._v("，而是有一个很小的误差。")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("C 语言允许使用科学计数法表示浮点数，使用字母"),t("code",[s._v("e")]),s._v("来分隔小数部分和指数部分。")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v(" x "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("123.456e+3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 123.456 x 10^3")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 等同于")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v(" x "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("123.456e3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("上面示例中，"),t("code",[s._v("e")]),s._v("后面如果是加号"),t("code",[s._v("+")]),s._v("，加号可以省略。注意，科学计数法里面"),t("code",[s._v("e")]),s._v("的前后，不能存在空格。")]),s._v(" "),t("p",[s._v("另外，科学计数法的小数部分如果是"),t("code",[s._v("0.x")]),s._v("或"),t("code",[s._v("x.0")]),s._v("的形式，那么"),t("code",[s._v("0")]),s._v("可以省略。")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.3E6")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 等同于")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v(".3E6")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.0E6")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 等同于")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.E6")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("h2",{attrs:{id:"布尔类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#布尔类型"}},[s._v("#")]),s._v(" 布尔类型")]),s._v(" "),t("p",[s._v("C 语言原来并没有为布尔值单独设置一个类型，而是使用整数"),t("code",[s._v("0")]),s._v("表示伪，所有非零值表示真。")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" x "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"x is true!\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("上面示例中，变量"),t("code",[s._v("x")]),s._v("等于"),t("code",[s._v("1")]),s._v("，C 语言就认为这个值代表真，从而会执行判断体内部的代码。")]),s._v(" "),t("p",[s._v("C99 标准添加了类型"),t("code",[s._v("_Bool")]),s._v("，表示布尔值。但是，这个类型其实只是整数类型的别名，还是使用"),t("code",[s._v("0")]),s._v("表示伪，"),t("code",[s._v("1")]),s._v("表示真，下面是一个示例。")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("_Bool")]),s._v(" isNormal"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nisNormal "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("isNormal"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Everything is OK.\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("头文件"),t("code",[s._v("stdbool.h")]),s._v("定义了另一个类型别名"),t("code",[s._v("bool")]),s._v("，并且定义了"),t("code",[s._v("true")]),s._v("代表"),t("code",[s._v("1")]),s._v("、"),t("code",[s._v("false")]),s._v("代表"),t("code",[s._v("0")]),s._v("。只要加载这个头文件，就可以使用这几个关键字。")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<stdbool.h>")])]),s._v("\n\nbool flag "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" false"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("上面示例中，加载头文件"),t("code",[s._v("stdbool.h")]),s._v("以后，就可以使用"),t("code",[s._v("bool")]),s._v("定义布尔值类型，以及"),t("code",[s._v("false")]),s._v("和"),t("code",[s._v("true")]),s._v("表示真伪。")]),s._v(" "),t("h2",{attrs:{id:"字面量的类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#字面量的类型"}},[s._v("#")]),s._v(" 字面量的类型")]),s._v(" "),t("p",[s._v("字面量（literal）指的是代码里面直接出现的值。")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" x "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("上面代码中，"),t("code",[s._v("x")]),s._v("是变量，"),t("code",[s._v("123")]),s._v("就是字面量。")]),s._v(" "),t("p",[s._v("编译时，字面量也会写入内存，因此编译器必须为字面量指定数据类型，就像必须为变量指定数据类型一样。")]),s._v(" "),t("p",[s._v("一般情况下，十进制整数字面量（比如"),t("code",[s._v("123")]),s._v("）会被编译器指定为"),t("code",[s._v("int")]),s._v("类型。如果一个数值比较大，超出了"),t("code",[s._v("int")]),s._v("能够表示的范围，编译器会将其指定为"),t("code",[s._v("long int")]),s._v("。如果数值超过了"),t("code",[s._v("long int")]),s._v("，会被指定为"),t("code",[s._v("unsigned long")]),s._v("。如果还不够大，就指定为"),t("code",[s._v("long long")]),s._v("或"),t("code",[s._v("unsigned long long")]),s._v("。")]),s._v(" "),t("p",[s._v("小数（比如"),t("code",[s._v("3.14")]),s._v("）会被指定为"),t("code",[s._v("double")]),s._v("类型。")]),s._v(" "),t("h2",{attrs:{id:"字面量后缀"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#字面量后缀"}},[s._v("#")]),s._v(" 字面量后缀")]),s._v(" "),t("p",[s._v("有时候，程序员希望为字面量指定一个不同的类型。比如，编译器将一个整数字面量指定为"),t("code",[s._v("int")]),s._v("类型，但是程序员希望将其指定为"),t("code",[s._v("long")]),s._v("类型，这时可以为该字面量加上后缀"),t("code",[s._v("l")]),s._v("或"),t("code",[s._v("L")]),s._v("，编译器就知道要把这个字面量的类型指定为"),t("code",[s._v("long")]),s._v("。")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" x "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("123L")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("上面代码中，字面量"),t("code",[s._v("123")]),s._v("有后缀"),t("code",[s._v("L")]),s._v("，编译器就会将其指定为"),t("code",[s._v("long")]),s._v("类型。这里"),t("code",[s._v("123L")]),s._v("写成"),t("code",[s._v("123l")]),s._v("，效果也是一样的，但是建议优先使用"),t("code",[s._v("L")]),s._v("，因为小写的"),t("code",[s._v("l")]),s._v("容易跟数字"),t("code",[s._v("1")]),s._v("混淆。")]),s._v(" "),t("p",[s._v("八进制和十六进制的值，也可以使用后缀"),t("code",[s._v("l")]),s._v("和"),t("code",[s._v("L")]),s._v("指定为 Long 类型，比如"),t("code",[s._v("020L")]),s._v("和"),t("code",[s._v("0x20L")]),s._v("。")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" y "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0377L")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" z "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x7fffL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("如果希望指定为无符号整数"),t("code",[s._v("unsigned int")]),s._v("，可以使用后缀"),t("code",[s._v("u")]),s._v("或"),t("code",[s._v("U")]),s._v("。")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" x "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("123U")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("code",[s._v("L")]),s._v("和"),t("code",[s._v("U")]),s._v("可以结合使用，表示"),t("code",[s._v("unsigned long")]),s._v("类型。"),t("code",[s._v("L")]),s._v("和"),t("code",[s._v("U")]),s._v("的大小写和组合顺序无所谓。")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" x "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("123LU")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("对于浮点数，编译器默认指定为 double 类型，如果希望指定为其他类型，需要在小数后面添加后缀"),t("code",[s._v("f")]),s._v("（float）或"),t("code",[s._v("l")]),s._v("（long double）。")]),s._v(" "),t("p",[s._v("科学计数法也可以使用后缀。")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.2345e+10F")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.2345e+10L")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("总结一下，常用的字面量后缀有下面这些。")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("f")]),s._v("和"),t("code",[s._v("F")]),s._v("："),t("code",[s._v("float")]),s._v("类型。")]),s._v(" "),t("li",[t("code",[s._v("l")]),s._v("和"),t("code",[s._v("L")]),s._v("：对于整数是"),t("code",[s._v("long int")]),s._v("类型，对于小数是"),t("code",[s._v("long double")]),s._v("类型。")]),s._v(" "),t("li",[t("code",[s._v("ll")]),s._v("和"),t("code",[s._v("LL")]),s._v("：Long Long 类型，比如"),t("code",[s._v("3LL")]),s._v("。")]),s._v(" "),t("li",[t("code",[s._v("u")]),s._v("和"),t("code",[s._v("U")]),s._v("：表示"),t("code",[s._v("unsigned int")]),s._v("，比如"),t("code",[s._v("15U")]),s._v("、"),t("code",[s._v("0377U")]),s._v("。")])]),s._v(" "),t("p",[t("code",[s._v("u")]),s._v("还可以与其他整数后缀结合，放在前面或后面都可以，比如"),t("code",[s._v("10UL")]),s._v("、"),t("code",[s._v("10ULL")]),s._v("和"),t("code",[s._v("10LLU")]),s._v("都是合法的。")]),s._v(" "),t("p",[s._v("下面是一些示例。")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v("           x "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1234")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v("      x "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1234L")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" x "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1234LL")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v("           x "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1234U")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v("      x "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1234UL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" x "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1234ULL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("float")]),s._v(" x       "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.14f")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v(" x      "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.14")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v(" x "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.14L")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("h2",{attrs:{id:"溢出"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#溢出"}},[s._v("#")]),s._v(" 溢出")]),s._v(" "),t("p",[s._v("每一种数据类型都有数值范围，如果存放的数值超出了这个范围（小于最小值或大于最大值），需要更多的二进制位存储，就会发生溢出。大于最大值，叫做向上溢出（overflow）；小于最小值，叫做向下溢出（underflow）。")]),s._v(" "),t("p",[s._v("一般来说，编译器不会对溢出报错，会正常执行代码，但是会忽略多出来的二进制位，只保留剩下的位，这样往往会得到意想不到的结果。所以，应该避免溢出。")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" x "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("255")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nx "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" x "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%d\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" x"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 0")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("上面示例中，变量"),t("code",[s._v("x")]),s._v("加"),t("code",[s._v("1")]),s._v("，得到的结果不是"),t("code",[s._v("256")]),s._v("，而是"),t("code",[s._v("0")]),s._v("。因为"),t("code",[s._v("x")]),s._v("是"),t("code",[s._v("unsign char")]),s._v("类型，最大值是"),t("code",[s._v("255")]),s._v("（二进制"),t("code",[s._v("11111111")]),s._v("），加"),t("code",[s._v("1")]),s._v("后就发生了溢出，"),t("code",[s._v("256")]),s._v("（二进制"),t("code",[s._v("100000000")]),s._v("）的最高位"),t("code",[s._v("1")]),s._v("被丢弃，剩下的值就是"),t("code",[s._v("0")]),s._v("。")]),s._v(" "),t("p",[s._v("再看下面的例子。")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" ui "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" UINT_MAX"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 4,294,967,295")]),s._v("\nui"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ui = %u\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ui"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 0")]),s._v("\nui"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ui = %u\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ui"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 4,294,967,295")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("上面示例中，常量"),t("code",[s._v("UINT_MAX")]),s._v("是 unsigned int 类型的最大值。如果加"),t("code",[s._v("1")]),s._v("，对于该类型就会溢出，从而得到"),t("code",[s._v("0")]),s._v("；而"),t("code",[s._v("0")]),s._v("是该类型的最小值，再减"),t("code",[s._v("1")]),s._v("，又会得到"),t("code",[s._v("UINT_MAX")]),s._v("。")]),s._v(" "),t("p",[s._v("溢出很容易被忽视，编译器又不会报错，所以必须非常小心。")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 错误")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("上面代码表面看似乎没有问题，但是循环变量"),t("code",[s._v("i")]),s._v("的类型是 unsigned int，这个类型的最小值是"),t("code",[s._v("0")]),s._v("，不可能得到小于0的结果。当"),t("code",[s._v("i")]),s._v("等于0，再减去"),t("code",[s._v("1")]),s._v("的时候，并不会返回"),t("code",[s._v("-1")]),s._v("，而是返回 unsigned int 的类型最大值，这个值总是大于等于"),t("code",[s._v("0")]),s._v("，导致无限循环。")]),s._v(" "),t("p",[s._v("为了避免溢出，最好方法就是将运算结果与类型的极限值进行比较。")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" ui"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" sum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 错误")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sum "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" ui "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" UINT_MAX"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("too_big")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" sum "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" sum "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" ui"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 正确")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ui "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" UINT_MAX "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" sum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("too_big")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" sum "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" sum "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" ui"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("p",[s._v("上面示例中，变量"),t("code",[s._v("sum")]),s._v("和"),t("code",[s._v("ui")]),s._v("都是 unsigned int 类型，它们相加的和还是 unsigned int 类型，这就有可能发生溢出。但是，不能通过相加的和是否超出了最大值"),t("code",[s._v("UINT_MAX")]),s._v("，来判断是否发生了溢出，因为"),t("code",[s._v("sum + ui")]),s._v("总是返回溢出后的结果，不可能大于"),t("code",[s._v("UINT_MAX")]),s._v("。正确的比较方法是，判断"),t("code",[s._v("UINT_MAX - sum")]),s._v("与"),t("code",[s._v("ui")]),s._v("之间的大小关系。")]),s._v(" "),t("p",[s._v("下面是另一种错误的写法。")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" j "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" j "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 错误")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"negative\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"positive\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v("上面示例的运算结果，会输出"),t("code",[s._v("positive")]),s._v("。原因是变量"),t("code",[s._v("i")]),s._v("和"),t("code",[s._v("j")]),s._v("都是 unsigned int 类型，"),t("code",[s._v("i - j")]),s._v("的结果也是这个类型，最小值为"),t("code",[s._v("0")]),s._v("，不可能得到小于"),t("code",[s._v("0")]),s._v("的结果。正确的写法是写成下面这样。")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("j "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ....")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h2",{attrs:{id:"sizeof-运算符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sizeof-运算符"}},[s._v("#")]),s._v(" sizeof 运算符")]),s._v(" "),t("p",[t("code",[s._v("sizeof")]),s._v("是 C 语言提供的一个运算符，返回某种数据类型或某个值占用的字节数量。它的参数可以是数据类型的关键字，也可以是变量名或某个具体的值。")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 参数为数据类型")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" x "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("sizeof")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 参数为变量")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("sizeof")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 参数为数值")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("sizeof")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.14")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("p",[s._v("上面的第一个示例，返回得到"),t("code",[s._v("int")]),s._v("类型占用的字节数量（通常是"),t("code",[s._v("4")]),s._v("或"),t("code",[s._v("8")]),s._v("）。第二个示例返回整数变量占用字节数量，结果与前一个示例完全一样。第三个示例返回浮点数"),t("code",[s._v("3.14")]),s._v("占用的字节数量，由于浮点数的字面量一律存储为 double 类型，所以会返回"),t("code",[s._v("8")]),s._v("，因为 double 类型占用的8个字节。")]),s._v(" "),t("p",[t("code",[s._v("sizeof")]),s._v("运算符的返回值，C 语言只规定是无符号整数，并没有规定具体的类型，而是留给系统自己去决定，"),t("code",[s._v("sizeof")]),s._v("到底返回什么类型。不同的系统中，返回值的类型有可能是"),t("code",[s._v("unsigned int")]),s._v("，也有可能是"),t("code",[s._v("unsigned long")]),s._v("，甚至是"),t("code",[s._v("unsigned long long")]),s._v("，对应的"),t("code",[s._v("printf()")]),s._v("占位符分别是"),t("code",[s._v("%u")]),s._v("、"),t("code",[s._v("%lu")]),s._v("和"),t("code",[s._v("%llu")]),s._v("。这样不利于程序的可移植性。")]),s._v(" "),t("p",[s._v("C 语言提供了一个解决方法，创造了一个类型别名"),t("code",[s._v("size_t")]),s._v("，用来统一表示"),t("code",[s._v("sizeof")]),s._v("的返回值类型。该别名定义在"),t("code",[s._v("stddef.h")]),s._v("头文件（引入"),t("code",[s._v("stdio.h")]),s._v("时会自动引入）里面，对应当前系统的"),t("code",[s._v("sizeof")]),s._v("的返回值类型，可能是"),t("code",[s._v("unsigned int")]),s._v("，也可能是"),t("code",[s._v("unsigned long")]),s._v("。")]),s._v(" "),t("p",[s._v("C 语言还提供了一个常量"),t("code",[s._v("SIZE_MAX")]),s._v("，表示"),t("code",[s._v("size_t")]),s._v("可以表示的最大整数。所以，"),t("code",[s._v("size_t")]),s._v("能够表示的整数范围为"),t("code",[s._v("[0, SIZE_MAX]")]),s._v("。")]),s._v(" "),t("p",[t("code",[s._v("printf()")]),s._v("有专门的占位符"),t("code",[s._v("%zd")]),s._v("或"),t("code",[s._v("%zu")]),s._v("，用来处理"),t("code",[s._v("size_t")]),s._v("类型的值。")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%zd\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("sizeof")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("上面代码中，不管"),t("code",[s._v("sizeof")]),s._v("返回值的类型是什么，"),t("code",[s._v("%zd")]),s._v("占位符（或"),t("code",[s._v("%zu")]),s._v("）都可以正确输出。")]),s._v(" "),t("p",[s._v("如果当前系统不支持"),t("code",[s._v("%zd")]),s._v("或"),t("code",[s._v("%zu")]),s._v("，可使用"),t("code",[s._v("%u")]),s._v("（unsigned int）或"),t("code",[s._v("%lu")]),s._v("（unsigned long int）代替。")]),s._v(" "),t("h2",{attrs:{id:"类型的自动转换"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#类型的自动转换"}},[s._v("#")]),s._v(" 类型的自动转换")]),s._v(" "),t("p",[s._v("某些情况下，C 语言会自动转换某个值的类型。")]),s._v(" "),t("h3",{attrs:{id:"赋值运算"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#赋值运算"}},[s._v("#")]),s._v(" 赋值运算")]),s._v(" "),t("p",[s._v("赋值运算符会自动将右边的值，转成左边变量的类型。")]),s._v(" "),t("p",[s._v("（1）浮点数赋值给整数变量")]),s._v(" "),t("p",[s._v("浮点数赋予整数变量时，C 语言直接丢弃小数部分，而不是四舍五入。")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" x "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.14")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("上面示例中，变量"),t("code",[s._v("x")]),s._v("是整数类型，赋给它的值是一个浮点数。编译器会自动把"),t("code",[s._v("3.14")]),s._v("先转为"),t("code",[s._v("int")]),s._v("类型，丢弃小数部分，再赋值给"),t("code",[s._v("x")]),s._v("，因此"),t("code",[s._v("x")]),s._v("的值是"),t("code",[s._v("3")]),s._v("。")]),s._v(" "),t("p",[s._v("这种自动转换会导致部分数据的丢失（"),t("code",[s._v("3.14")]),s._v("丢失了小数部分），所以最好不要跨类型赋值，尽量保证变量与所要赋予的值是同一个类型。")]),s._v(" "),t("p",[s._v("注意，舍弃小数部分时，不是四舍五入，而是整个舍弃。")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" x "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("12.99")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("上面示例中，"),t("code",[s._v("x")]),s._v("等于"),t("code",[s._v("12")]),s._v("，而不是四舍五入的"),t("code",[s._v("13")]),s._v("。")]),s._v(" "),t("p",[s._v("（2）整数赋值给浮点数变量")]),s._v(" "),t("p",[s._v("整数赋值给浮点数变量时，会自动转为浮点数。")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("float")]),s._v(" y "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("上面示例中，变量"),t("code",[s._v("y")]),s._v("的值不是"),t("code",[s._v("24")]),s._v("，而是"),t("code",[s._v("24.0")]),s._v("，因为等号右边的整数自动转为了浮点数。")]),s._v(" "),t("p",[s._v("（3）窄类型赋值给宽类型")]),s._v(" "),t("p",[s._v("字节宽度较小的整数类型，赋值给字节宽度较大的整数变量时，会发生类型提升，即窄类型自动转为宽类型。")]),s._v(" "),t("p",[s._v("比如，"),t("code",[s._v("char")]),s._v("或"),t("code",[s._v("short")]),s._v("类型赋值给"),t("code",[s._v("int")]),s._v("类型，会自动提升为"),t("code",[s._v("int")]),s._v("。")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" x "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" x "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" y"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("上面示例中，变量"),t("code",[s._v("x")]),s._v("的类型是"),t("code",[s._v("char")]),s._v("，由于赋值给"),t("code",[s._v("int")]),s._v("类型，所以会自动提升为"),t("code",[s._v("int")]),s._v("。")]),s._v(" "),t("p",[s._v("（4）宽类型赋值给窄类型")]),s._v(" "),t("p",[s._v("字节宽度较大的类型，赋值给字节宽度较小的变量时，会发生类型降级，自动转为后者的类型。这时可能会发生截值（truncation），系统会自动截去多余的二进制位，导致难以预料的结果。")]),s._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[s._v("int i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("321")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nchar ch "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ch 的值是 65 （321 % 256 的余值）")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("上面例子中，变量"),t("code",[s._v("ch")]),s._v("是"),t("code",[s._v("char")]),s._v("类型，宽度是8个二进制位。变量"),t("code",[s._v("i")]),s._v("是"),t("code",[s._v("int")]),s._v("类型，将"),t("code",[s._v("i")]),s._v("赋值给"),t("code",[s._v("ch")]),s._v("，后者只能容纳"),t("code",[s._v("i")]),s._v("（二进制形式为"),t("code",[s._v("101000001")]),s._v("，共9位）的后八位，前面多出来的二进制位被丢弃，保留后八位就变成了"),t("code",[s._v("01000001")]),s._v("（十进制的65，相当于字符"),t("code",[s._v("A")]),s._v("）。")]),s._v(" "),t("p",[s._v("浮点数赋值给整数类型的值，也会发生截值，浮点数的小数部分会被截去。")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v(" pi "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.14159")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" pi"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// i 的值为 3")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("上面示例中，"),t("code",[s._v("i")]),s._v("等于"),t("code",[s._v("3")]),s._v("，"),t("code",[s._v("pi")]),s._v("的小数部分被截去了。")]),s._v(" "),t("h3",{attrs:{id:"混合类型的运算"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#混合类型的运算"}},[s._v("#")]),s._v(" 混合类型的运算")]),s._v(" "),t("p",[s._v("不同类型的值进行混合计算时，必须先转成同一个类型，才能进行计算。转换规则如下：")]),s._v(" "),t("p",[s._v("（1）整数与浮点数混合运算时，整数转为浮点数类型，与另一个运算数类型相同。")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 4.2")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("上面示例是"),t("code",[s._v("int")]),s._v("类型与"),t("code",[s._v("float")]),s._v("类型的混合计算，"),t("code",[s._v("int")]),s._v("类型的"),t("code",[s._v("3")]),s._v("会先转成"),t("code",[s._v("float")]),s._v("的"),t("code",[s._v("3.0")]),s._v("，再进行计算，得到"),t("code",[s._v("4.2")]),s._v("。")]),s._v(" "),t("p",[s._v("（2）不同的浮点数类型混合运算时，宽度较小的类型转为宽度较大的类型，比如"),t("code",[s._v("float")]),s._v("转为"),t("code",[s._v("double")]),s._v("，"),t("code",[s._v("double")]),s._v("转为"),t("code",[s._v("long double")]),s._v("。")]),s._v(" "),t("p",[s._v("（3）不同的整数类型混合运算时，宽度较小的类型会提升为宽度较大的类型。比如"),t("code",[s._v("short")]),s._v("转为"),t("code",[s._v("int")]),s._v("，"),t("code",[s._v("int")]),s._v("转为"),t("code",[s._v("long")]),s._v("等，有时还会将带符号的类型"),t("code",[s._v("signed")]),s._v("转为无符号"),t("code",[s._v("unsigned")]),s._v("。")]),s._v(" "),t("p",[s._v("下面例子的执行结果，可能会出人意料。")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("sizeof")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("）\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("do_something")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("上面示例中，变量"),t("code",[s._v("a")]),s._v("是带符号整数，"),t("code",[s._v("sizeof(int)")]),s._v("是"),t("code",[s._v("size_t")]),s._v("类型，这是一个无符号整数。按照规则，signed int 自动转为 unsigned int，所以"),t("code",[s._v("a")]),s._v("会自动转成无符号整数"),t("code",[s._v("4294967291")]),s._v("（转换规则是"),t("code",[s._v("-5")]),s._v("加上无符号整数的最大值，再加1），导致比较失败，"),t("code",[s._v("do_something()")]),s._v("不会执行。")]),s._v(" "),t("p",[s._v("所以，最好避免无符号整数与有符号整数的混合运算。因为这时 C 语言会自动将"),t("code",[s._v("signed int")]),s._v("转为"),t("code",[s._v("unsigned int")]),s._v("，可能不会得到预期的结果。")]),s._v(" "),t("h3",{attrs:{id:"整数类型的运算"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#整数类型的运算"}},[s._v("#")]),s._v(" 整数类型的运算")]),s._v(" "),t("p",[s._v("两个相同类型的整数运算时，或者单个整数的运算，一般来说，运算结果也属于同一类型。但是有一个例外，宽度小于"),t("code",[s._v("int")]),s._v("的类型，运算结果会自动提升为"),t("code",[s._v("int")]),s._v("。")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("66")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"negative\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"positive\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("上面示例中，变量"),t("code",[s._v("a")]),s._v("是 unsigned char 类型，这个类型不可能小于0，但是"),t("code",[s._v("-a")]),s._v("不是 unsigned char 类型，会自动转为 int 类型，导致上面的代码输出 negative。")]),s._v(" "),t("p",[s._v("再看下面的例子。")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" b "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("255")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" c "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("255")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("do_something")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("b "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("300")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("do_something")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[s._v("上面示例中，表达式"),t("code",[s._v("a - 5")]),s._v("和"),t("code",[s._v("b + c")]),s._v("都会自动转为 int 类型，所以函数"),t("code",[s._v("do_something()")]),s._v("会执行两次。")]),s._v(" "),t("h3",{attrs:{id:"函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#函数"}},[s._v("#")]),s._v(" 函数")]),s._v(" "),t("p",[s._v("函数的参数和返回值，会自动转成函数定义里指定的类型。")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("dostuff")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" m "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("42")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("short")]),s._v(" n "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("43")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" c "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("dostuff")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("m"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("上面示例中，参数变量"),t("code",[s._v("m")]),s._v("和"),t("code",[s._v("n")]),s._v("不管原来的类型是什么，都会转成函数"),t("code",[s._v("dostuff()")]),s._v("定义的参数类型。")]),s._v(" "),t("p",[s._v("下面是返回值自动转换类型的例子。")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("func")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("42")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("上面示例中，函数内部的变量"),t("code",[s._v("a")]),s._v("是"),t("code",[s._v("int")]),s._v("类型，但是返回的值是"),t("code",[s._v("char")]),s._v("类型，因为函数定义中返回的是这个类型。")]),s._v(" "),t("h2",{attrs:{id:"类型的显式转换"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#类型的显式转换"}},[s._v("#")]),s._v(" 类型的显式转换")]),s._v(" "),t("p",[s._v("原则上，应该避免类型的自动转换，防止出现意料之外的结果。C 语言提供了类型的显式转换，允许手动转换类型。")]),s._v(" "),t("p",[s._v("只要在一个值或变量的前面，使用圆括号指定类型"),t("code",[s._v("(type)")]),s._v("，就可以将这个值或变量转为指定的类型，这叫做“类型指定”（casting）。")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" ch\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("上面示例将变量"),t("code",[s._v("ch")]),s._v("转成无符号的字符类型。")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" y "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("上面示例中，"),t("code",[s._v("(long int)")]),s._v("将"),t("code",[s._v("10")]),s._v("显式转为"),t("code",[s._v("long int")]),s._v("类型。这里的显示转换其实是不必要的，因为赋值运算符会自动将右边的值，转为左边变量的类型。")]),s._v(" "),t("h2",{attrs:{id:"可移植类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#可移植类型"}},[s._v("#")]),s._v(" 可移植类型")]),s._v(" "),t("p",[s._v("C 语言的整数类型（short、int、long）在不同计算机上，占用的字节宽度可能是不一样的，无法提前知道它们到底占用多少个字节。")]),s._v(" "),t("p",[s._v("程序员有时控制准确的字节宽度，这样的话，代码可以有更好的可移植性，头文件"),t("code",[s._v("stdint.h")]),s._v("创造了一些新的类型别名。")]),s._v(" "),t("p",[s._v("（1）精确宽度类型(exact-width integer type)，保证某个整数类型的宽度是确定的。")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("int8_t")]),s._v("：8位有符号整数。")]),s._v(" "),t("li",[t("code",[s._v("int16_t")]),s._v("：16位有符号整数。")]),s._v(" "),t("li",[t("code",[s._v("int32_t")]),s._v("：32位有符号整数。")]),s._v(" "),t("li",[t("code",[s._v("int64_t")]),s._v("：64位有符号整数。")]),s._v(" "),t("li",[t("code",[s._v("uint8_t")]),s._v("：8位无符号整数。")]),s._v(" "),t("li",[t("code",[s._v("uint16_t")]),s._v("：16位无符号整数。")]),s._v(" "),t("li",[t("code",[s._v("uint32_t")]),s._v("：32位无符号整数。")]),s._v(" "),t("li",[t("code",[s._v("uint64_t")]),s._v("：64位无符号整数。")])]),s._v(" "),t("p",[s._v("上面这些都是类型别名，编译器会指定它们指向的底层类型。比如，某个系统中，如果"),t("code",[s._v("int")]),s._v("类型为32位，"),t("code",[s._v("int32_t")]),s._v("就会指向"),t("code",[s._v("int")]),s._v("；如果"),t("code",[s._v("long")]),s._v("类型为32位，"),t("code",[s._v("int32_t")]),s._v("则会指向"),t("code",[s._v("long")]),s._v("。")]),s._v(" "),t("p",[s._v("下面是一个使用示例。")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<stdio.h>")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<stdint.h>")])]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("int32_t")]),s._v(" x32 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("45933945")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"x32 = %d\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" x32"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("p",[s._v("上面示例中，变量"),t("code",[s._v("x32")]),s._v("声明为"),t("code",[s._v("int32_t")]),s._v("类型，可以保证是32位的宽度。")]),s._v(" "),t("p",[s._v("（2）最小宽度类型（minimum width type），保证某个整数类型的最小长度。")]),s._v(" "),t("ul",[t("li",[s._v("int_least8_t")]),s._v(" "),t("li",[s._v("int_least16_t")]),s._v(" "),t("li",[s._v("int_least32_t")]),s._v(" "),t("li",[s._v("int_least64_t")]),s._v(" "),t("li",[s._v("uint_least8_t")]),s._v(" "),t("li",[s._v("uint_least16_t")]),s._v(" "),t("li",[s._v("uint_least32_t")]),s._v(" "),t("li",[s._v("uint_least64_t")])]),s._v(" "),t("p",[s._v("上面这些类型，可以保证占据的字节不少于指定宽度。比如，"),t("code",[s._v("int_least8_t")]),s._v("表示可以容纳8位有符号整数的最小宽度的类型。")]),s._v(" "),t("p",[s._v("（3）最快的最小宽度类型（fast minimum width type），可以使整数计算达到最快的类型。")]),s._v(" "),t("ul",[t("li",[s._v("int_fast8_t")]),s._v(" "),t("li",[s._v("int_fast16_t")]),s._v(" "),t("li",[s._v("int_fast32_t")]),s._v(" "),t("li",[s._v("int_fast64_t")]),s._v(" "),t("li",[s._v("uint_fast8_t")]),s._v(" "),t("li",[s._v("uint_fast16_t")]),s._v(" "),t("li",[s._v("uint_fast32_t")]),s._v(" "),t("li",[s._v("uint_fast64_t")])]),s._v(" "),t("p",[s._v("上面这些类型是保证字节宽度的同时，追求最快的运算速度，比如"),t("code",[s._v("int_fast8_t")]),s._v("表示对于8位有符号整数，运算速度最快的类型。这是因为某些机器对于特定宽度的数据，运算速度最快，举例来说，32位计算机对于32位数据的运算速度，会快于16位数据。")]),s._v(" "),t("p",[s._v("（4）可以保存指针的整数类型。")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("intptr_t")]),s._v("：可以存储指针（内存地址）的有符号整数类型。")]),s._v(" "),t("li",[t("code",[s._v("uintptr_t")]),s._v("：可以存储指针的无符号整数类型。")])]),s._v(" "),t("p",[s._v("（5）最大宽度整数类型，用于存放最大的整数。")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("intmax_t")]),s._v("：可以存储任何有效的有符号整数的类型。")]),s._v(" "),t("li",[t("code",[s._v("uintmax_t")]),s._v("：可以存放任何有效的无符号整数的类型。")])]),s._v(" "),t("p",[s._v("上面的这两个类型的宽度比"),t("code",[s._v("long long")]),s._v("和"),t("code",[s._v("unsigned long")]),s._v("更大。")])])}),[],!1,null,null,null);t.default=e.exports}}]);