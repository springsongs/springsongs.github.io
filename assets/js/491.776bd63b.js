(window.webpackJsonp=window.webpackJsonp||[]).push([[491],{790:function(t,e,a){"use strict";a.r(e);var s=a(4),n=Object(s.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"_52-键盘事件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_52-键盘事件"}},[t._v("#")]),t._v(" 52.键盘事件")]),t._v(" "),e("blockquote",[e("p",[t._v("作者："),e("a",{attrs:{href:"https://wangdoc.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("来自网道项目"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("本站地址："),e("a",{attrs:{href:"http://springsongs.cn",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://springsongs.cn"),e("OutboundLink")],1)])]),t._v(" "),e("h2",{attrs:{id:"键盘事件的种类"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#键盘事件的种类"}},[t._v("#")]),t._v(" 键盘事件的种类")]),t._v(" "),e("p",[t._v("键盘事件由用户击打键盘触发，主要有"),e("code",[t._v("keydown")]),t._v("、"),e("code",[t._v("keypress")]),t._v("、"),e("code",[t._v("keyup")]),t._v("三个事件，它们都继承了"),e("code",[t._v("KeyboardEvent")]),t._v("接口。")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("keydown")]),t._v("：按下键盘时触发。")]),t._v(" "),e("li",[e("code",[t._v("keypress")]),t._v("：按下有值的键时触发，即按下 Ctrl、Alt、Shift、Meta 这样无值的键，这个事件不会触发。对于有值的键，按下时先触发"),e("code",[t._v("keydown")]),t._v("事件，再触发这个事件。")]),t._v(" "),e("li",[e("code",[t._v("keyup")]),t._v("：松开键盘时触发该事件。")])]),t._v(" "),e("p",[t._v("如果用户一直按键不松开，就会连续触发键盘事件，触发的顺序如下。")]),t._v(" "),e("ol",[e("li",[t._v("keydown")]),t._v(" "),e("li",[t._v("keypress")]),t._v(" "),e("li",[t._v("keydown")]),t._v(" "),e("li",[t._v("keypress")]),t._v(" "),e("li",[t._v("...（重复以上过程）")]),t._v(" "),e("li",[t._v("keyup")])]),t._v(" "),e("h2",{attrs:{id:"keyboardevent-接口概述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#keyboardevent-接口概述"}},[t._v("#")]),t._v(" KeyboardEvent 接口概述")]),t._v(" "),e("p",[e("code",[t._v("KeyboardEvent")]),t._v("接口用来描述用户与键盘的互动。这个接口继承了"),e("code",[t._v("Event")]),t._v("接口，并且定义了自己的实例属性和实例方法。")]),t._v(" "),e("p",[t._v("浏览器原生提供"),e("code",[t._v("KeyboardEvent")]),t._v("构造函数，用来新建键盘事件的实例。")]),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("KeyboardEvent")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("type"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("code",[t._v("KeyboardEvent")]),t._v("构造函数接受两个参数。第一个参数是字符串，表示事件类型；第二个参数是一个事件配置对象，该参数可选。除了"),e("code",[t._v("Event")]),t._v("接口提供的属性，还可以配置以下字段，它们都是可选。")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("key")]),t._v("：字符串，当前按下的键，默认为空字符串。")]),t._v(" "),e("li",[e("code",[t._v("code")]),t._v("：字符串，表示当前按下的键的字符串形式，默认为空字符串。")]),t._v(" "),e("li",[e("code",[t._v("location")]),t._v("：整数，当前按下的键的位置，默认为"),e("code",[t._v("0")]),t._v("。")]),t._v(" "),e("li",[e("code",[t._v("ctrlKey")]),t._v("：布尔值，是否按下 Ctrl 键，默认为"),e("code",[t._v("false")]),t._v("。")]),t._v(" "),e("li",[e("code",[t._v("shiftKey")]),t._v("：布尔值，是否按下 Shift 键，默认为"),e("code",[t._v("false")]),t._v("。")]),t._v(" "),e("li",[e("code",[t._v("altKey")]),t._v("：布尔值，是否按下 Alt 键，默认为"),e("code",[t._v("false")]),t._v("。")]),t._v(" "),e("li",[e("code",[t._v("metaKey")]),t._v("：布尔值，是否按下 Meta 键，默认为"),e("code",[t._v("false")]),t._v("。")]),t._v(" "),e("li",[e("code",[t._v("repeat")]),t._v("：布尔值，是否重复按键，默认为"),e("code",[t._v("false")]),t._v("。")])]),t._v(" "),e("h2",{attrs:{id:"keyboardevent-的实例属性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#keyboardevent-的实例属性"}},[t._v("#")]),t._v(" KeyboardEvent 的实例属性")]),t._v(" "),e("h3",{attrs:{id:"keyboardevent-altkey-keyboardevent-ctrlkey-keyboardevent-metakey-keyboardevent-shiftkey"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#keyboardevent-altkey-keyboardevent-ctrlkey-keyboardevent-metakey-keyboardevent-shiftkey"}},[t._v("#")]),t._v(" KeyboardEvent.altKey，KeyboardEvent.ctrlKey，KeyboardEvent.metaKey，KeyboardEvent.shiftKey")]),t._v(" "),e("p",[t._v("以下属性都是只读属性，返回一个布尔值，表示是否按下对应的键。")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("KeyboardEvent.altKey")]),t._v("：是否按下 Alt 键")]),t._v(" "),e("li",[e("code",[t._v("KeyboardEvent.ctrlKey")]),t._v("：是否按下 Ctrl 键")]),t._v(" "),e("li",[e("code",[t._v("KeyboardEvent.metaKey")]),t._v("：是否按下 meta 键（Mac 系统是一个四瓣的小花，Windows 系统是 windows 键）")]),t._v(" "),e("li",[e("code",[t._v("KeyboardEvent.shiftKey")]),t._v("：是否按下 Shift 键")])]),t._v(" "),e("p",[t._v("下面是一个示例。")]),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("showChar")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ALT: '")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" e"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("altKey"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'CTRL: '")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" e"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ctrlKey"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Meta: '")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" e"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("metaKey"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Shift: '")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" e"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("shiftKey"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\ndocument"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'keydown'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" showChar"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])]),e("h3",{attrs:{id:"keyboardevent-code"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#keyboardevent-code"}},[t._v("#")]),t._v(" KeyboardEvent.code")]),t._v(" "),e("p",[e("code",[t._v("KeyboardEvent.code")]),t._v("属性返回一个字符串，表示当前按下的键的字符串形式。该属性只读。")]),t._v(" "),e("p",[t._v("下面是一些常用键的字符串形式，其他键请查"),e("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code/code_values",target:"_blank",rel:"noopener noreferrer"}},[t._v("文档"),e("OutboundLink")],1),t._v("。")]),t._v(" "),e("ul",[e("li",[t._v("数字键0 - 9：返回"),e("code",[t._v("digit0")]),t._v(" - "),e("code",[t._v("digit9")])]),t._v(" "),e("li",[t._v("字母键A - z：返回"),e("code",[t._v("KeyA")]),t._v(" - "),e("code",[t._v("KeyZ")])]),t._v(" "),e("li",[t._v("功能键F1 - F12：返回 "),e("code",[t._v("F1")]),t._v(" - "),e("code",[t._v("F12")])]),t._v(" "),e("li",[t._v("方向键：返回"),e("code",[t._v("ArrowDown")]),t._v("、"),e("code",[t._v("ArrowUp")]),t._v("、"),e("code",[t._v("ArrowLeft")]),t._v("、"),e("code",[t._v("ArrowRight")])]),t._v(" "),e("li",[t._v("Alt 键：返回"),e("code",[t._v("AltLeft")]),t._v("或"),e("code",[t._v("AltRight")])]),t._v(" "),e("li",[t._v("Shift 键：返回"),e("code",[t._v("ShiftLeft")]),t._v("或"),e("code",[t._v("ShiftRight")])]),t._v(" "),e("li",[t._v("Ctrl 键：返回"),e("code",[t._v("ControlLeft")]),t._v("或"),e("code",[t._v("ControlRight")])])]),t._v(" "),e("h3",{attrs:{id:"keyboardevent-key"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#keyboardevent-key"}},[t._v("#")]),t._v(" KeyboardEvent.key")]),t._v(" "),e("p",[e("code",[t._v("KeyboardEvent.key")]),t._v("属性返回一个字符串，表示按下的键名。该属性只读。")]),t._v(" "),e("p",[t._v("如果按下的键代表可打印字符，则返回这个字符，比如数字、字母。")]),t._v(" "),e("p",[t._v("如果按下的键代表不可打印的特殊字符，则返回预定义的键值，比如 Backspace，Tab，Enter，Shift，Control，Alt，CapsLock，Esc，Spacebar，PageUp，PageDown，End，Home，Left，Right，Up，Down，PrintScreen，Insert，Del，Win，F1～F12，NumLock，Scroll 等。")]),t._v(" "),e("p",[t._v("如果同时按下一个控制键和一个符号键，则返回符号键的键名。比如，按下 Ctrl + a，则返回"),e("code",[t._v("a")]),t._v("；按下 Shift + a，则返回大写的"),e("code",[t._v("A")]),t._v("。")]),t._v(" "),e("p",[t._v("如果无法识别键名，返回字符串"),e("code",[t._v("Unidentified")]),t._v("。")]),t._v(" "),e("h3",{attrs:{id:"keyboardevent-location"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#keyboardevent-location"}},[t._v("#")]),t._v(" KeyboardEvent.location")]),t._v(" "),e("p",[e("code",[t._v("KeyboardEvent.location")]),t._v("属性返回一个整数，表示按下的键处在键盘的哪一个区域。它可能取以下值。")]),t._v(" "),e("ul",[e("li",[t._v("0：处在键盘的主区域，或者无法判断处于哪一个区域。")]),t._v(" "),e("li",[t._v("1：处在键盘的左侧，只适用那些有两个位置的键（比如 Ctrl 和 Shift 键）。")]),t._v(" "),e("li",[t._v("2：处在键盘的右侧，只适用那些有两个位置的键（比如 Ctrl 和 Shift 键）。")]),t._v(" "),e("li",[t._v("3：处在数字小键盘。")])]),t._v(" "),e("h3",{attrs:{id:"keyboardevent-repeat"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#keyboardevent-repeat"}},[t._v("#")]),t._v(" KeyboardEvent.repeat")]),t._v(" "),e("p",[e("code",[t._v("KeyboardEvent.repeat")]),t._v("返回一个布尔值，代表该键是否被按着不放，以便判断是否重复这个键，即浏览器会持续触发"),e("code",[t._v("keydown")]),t._v("和"),e("code",[t._v("keypress")]),t._v("事件，直到用户松开手为止。")]),t._v(" "),e("h2",{attrs:{id:"keyboardevent-的实例方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#keyboardevent-的实例方法"}},[t._v("#")]),t._v(" KeyboardEvent 的实例方法")]),t._v(" "),e("h3",{attrs:{id:"keyboardevent-getmodifierstate"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#keyboardevent-getmodifierstate"}},[t._v("#")]),t._v(" KeyboardEvent.getModifierState()")]),t._v(" "),e("p",[e("code",[t._v("KeyboardEvent.getModifierState()")]),t._v("方法返回一个布尔值，表示是否按下或激活指定的功能键。它的常用参数如下。")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("Alt")]),t._v("：Alt 键")]),t._v(" "),e("li",[e("code",[t._v("CapsLock")]),t._v("：大写锁定键")]),t._v(" "),e("li",[e("code",[t._v("Control")]),t._v("：Ctrl 键")]),t._v(" "),e("li",[e("code",[t._v("Meta")]),t._v("：Meta 键")]),t._v(" "),e("li",[e("code",[t._v("NumLock")]),t._v("：数字键盘开关键")]),t._v(" "),e("li",[e("code",[t._v("Shift")]),t._v("：Shift 键")])]),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  event"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getModifierState")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Control'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("\n  event"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getModifierState")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Alt'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("\n  event"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getModifierState")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Meta'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("p",[t._v("上面代码表示，只要"),e("code",[t._v("Control")]),t._v("、"),e("code",[t._v("Alt")]),t._v("、"),e("code",[t._v("Meta")]),t._v("里面，同时按下任意两个或两个以上的键就返回。")])])}),[],!1,null,null,null);e.default=n.exports}}]);